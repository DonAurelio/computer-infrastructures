- name: Creating nfs export directories
  file: 'path="{{ item.strip().split()[0] }}" state=directory'
  with_items: "{{ nfs_exports }}"

- name: Creating /etc/exports file.
  template:
    src: exports.j2
    dest: /etc/exports
    owner: root
    group: root
    mode: 0644
  # The notification event will be sended to 
  # the handler with the corresponding name 
  # in the handlers folder
  notify: reload_nfs

- name: Start nfs service.
  service: "name=nfs-kernel-server state=started enabled=yes"
  when: nfs_exports|length

- name: Create a master MPI user
  user:
    name: "{{ mpi_user_name }}"
    password: "{{ mpi_user_name | password_hash('sha512') }}"
    state: present
    shell: /bin/bash       
    system: no             
    createhome: yes        
    home: /home/{{ mpi_user_name }}
    generate_ssh_key: yes
    ssh_key_file: .ssh/id_rsa

# - name: Check if .ssh dir exist
#   stat: path="/home/{{ mpi_user_name }}/.ssh"
#   register: ssh_directory_exists

# - name: Removing .ssh dir if exists
#   file: path="/home/{{ mpi_user_name }}/.ssh" state=absent
#   when: ssh_directory_exists.stat.exists == true

# - name: Creating .ssh folder
#   # become: no
#   become_user: "{{ mpi_user_name }}"
#   # become_method: su
#   file: 
#     path: "/home/{{ mpi_user_name }}/.ssh" 
#     state: directory
#     mode: 700
#     group: "{{ mpi_user_name }}"
#     owner: "{{ mpi_user_name }}"

# Todo: set the behabior when the key exist dir exist
# - name: Generating ssh keys
#   become: no 
#   become_user: "{{ mpi_user_name }}"
#   shell: ssh-keygen -t rsa -N '' -f /home/{{ mpi_user_name }}/.ssh/id_rsa


# - name: Distribute ssh public-key
#   shell: sshpass -p '{{ mpi_user_name }}' ssh-copy-id -i /home/{{ mpi_user_name }}/.ssh/id_rsa {{ mpi_user_name }}@{{ item.name }}
#   become_user: "{{ mpi_user_name }}"
#   with_items: "{{ mpi_hosts }}"
